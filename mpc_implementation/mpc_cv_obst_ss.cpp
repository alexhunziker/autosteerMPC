#include <dlib/control.h>
#include <math.h>

using namespace dlib;

const int NR_OF_STATES = 7;
const int NR_OF_CONTROLS = 4;

matrix<double, NR_OF_STATES, NR_OF_STATES> ss_A[3];
matrix<double, NR_OF_STATES, NR_OF_CONTROLS> ss_B[3];

/* 
STATE: 
    Offset Y
    Yaw angle
    Yaw rate
    Schwimm Angle
    Dummy: target yaw
    Velocity
    Time to Collision

CONTROLS:
    Steering Angle
    Dummy: target yaw
    Acceleration
    Breaks

Linearization for sample time 0.1s

Corresponding MATLAB/SIMULINK Model: mpc_cv_obst
*/

void init_ss()
{
    matrix<double, NR_OF_STATES, NR_OF_STATES> A0;

    A0 = 1.10517091807565, 0, -0.148389680769349, -0.0164113649531852, 0.200430361861406, 0, 0,
    0, 1, 0.0701198468049256, 0.00779874007178865, 0, 0, 0,
    0, 0, 0.475743473586823, 0.0615641544802407, 0, 0, 0,
    0, 0, 0.0564338082735540, 0.00734286491632462, 0, 0, 0,
    0, 0, 0, 0, 0.905742708023549, 0, 0,
    0, 0, 0, 0, 0, 0.990049833749168, 0,
    0, 0, 0, 0, 0, -0.0497508312541597, 1;
    ss_A[0] = A0;

    matrix<double, NR_OF_STATES, NR_OF_STATES> A1; // TODO: Fake
    A1 = 1.10517091807565, 0, -0.148389680769349, -0.0164113649531852, 0.200430361861406, 0, 0,
    0, 1, 0.0701198468049256, 0.00779874007178865, 0, 0, 0,
    0, 0, 0.475743473586823, 0.0615641544802407, 0, 0, 0,
    0, 0, 0.0564338082735540, 0.00734286491632462, 0, 0, 0,
    0, 0, 0, 0, 0.905742708023549, 0, 0,
    0, 0, 0, 0, 0, 0.990049833749168, 0,
    0, 0, 0, 0, 0, -0.0497508312541597, 1;
    ss_A[1] = A1;

    matrix<double, NR_OF_STATES, NR_OF_STATES> A2; // Fake
    A2 = 1.10517091807565, 0, -0.148389680769349, -0.0164113649531852, 0.200430361861406, 0, 0,
    0, 1, 0.0701198468049256, 0.00779874007178865, 0, 0, 0,
    0, 0, 0.475743473586823, 0.0615641544802407, 0, 0, 0,
    0, 0, 0.0564338082735540, 0.00734286491632462, 0, 0, 0,
    0, 0, 0, 0, 0.905742708023549, 0, 0,
    0, 0, 0, 0, 0, 0.990049833749168, 0,
    0, 0, 0, 0, 0, -0.0497508312541597, 1;
    ss_A[2] = A2;

    matrix<double, NR_OF_STATES, NR_OF_CONTROLS> B0;
    B0 = -0.130455489869064, -0.00991147428988909, 0, 0,
    0.0628877679773124, 0, 0, 0,
    1.08257977931400, 0, 0, 0,
    -0.389095891554744, 0, 0, 0,
    0, -0.0942572919764515, 0, 0,
    0, 0, 0.0995016625083195, -0.199003325016639,
    0, 0, -0.00249168745840268, 0.00498337491680536;
    ss_B[0] = B0;

    matrix<double, NR_OF_STATES, NR_OF_CONTROLS> B1; //Fake
    B1 = -0.130455489869064, -0.00991147428988909, 0, 0,
    0.0628877679773124, 0, 0, 0,
    1.08257977931400, 0, 0, 0,
    -0.389095891554744, 0, 0, 0,
    0, -0.0942572919764515, 0, 0,
    0, 0, 0.0995016625083195, -0.199003325016639,
    0, 0, -0.00249168745840268, 0.00498337491680536;
    ss_B[1] = B1;

    matrix<double, NR_OF_STATES, NR_OF_CONTROLS> B2; // Fake
    B2 = -0.130455489869064, -0.00991147428988909, 0, 0,
    0.0628877679773124, 0, 0, 0,
    1.08257977931400, 0, 0, 0,
    -0.389095891554744, 0, 0, 0,
    0, -0.0942572919764515, 0, 0,
    0, 0, 0.0995016625083195, -0.199003325016639,
    0, 0, -0.00249168745840268, 0.00498337491680536;
    ss_B[2] = B2;
}